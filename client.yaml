---
- name: Setup virt-secure box for security demonstration purposes
  hosts: client
  become: yes
  become_user: root
  vars:
    nbde_client_bindings:
      - device: /dev/vda2
        # recommend vault encrypting the encryption_password
        # see https://docs.ansible.com/ansible/latest/user_guide/vault.html
        encryption_password: password
        servers:
          - http://tang-server:7500
    selinux:
        selinux_policy: targeted
        selinux_state: enforcing

  tasks:
    - name: Remove old version of hackme
      ansible.builtin.shell: rm -rf /home/lvrabec/hackme.sh
      ignore_errors: true

    - name: Copy hackme script to emulate malicious user attack to demonstrate security built-in technologies on RHEL-9
      ansible.builtin.copy:
        src: ./scripts/hackme.sh
        dest: /home/lvrabec/hackme.sh
        owner: lvrabec
        group: lvrabec
        mode: '0755'
        force: yes

    - name: Add the user 'tester'
      ansible.builtin.user:
        name: tester
        shell: /bin/bash
        seuser: user_u
        groups: wheel
        append: yes

    - name: Set password to user
      shell: echo tester:redhat | sudo chpasswd

    - name: Make tester to run sudo for demonstration purposes
      ansible.builtin.copy:
        src: ./scripts/administrators
        dest: /etc/sudoers.d/administrators
        owner: root
        group: root
        mode: '440'
        force: yes

    - name: ensure security component are installed
      dnf:
        name: "{{ item }}"
        state: latest
      loop:
        - fapolicyd
        - aide
        - usbguard
        - selinux-policy-devel

    - name: Start integrity
      lineinfile:
        path: /etc/fapolicyd/fapolicyd.conf
        regexp: 'integrity'
        line: 'integrity = sha256'
        backrefs: yes

    - name: Start/Enable fapolicyd
      systemd:
        name: fapolicyd.service
        state: started
        enabled: yes

    - name: Check if there is existing hackme trusted file in fapolicyd, if yes remove it
      ansible.builtin.shell: rm -rf /etc/fapolicyd/trust.d/hackme
      ignore_errors: true

    - name: Check if there is existing USBGuard rules file, if yes remove it
      ansible.builtin.shell: rm -rf /home/lvrabec/rules.conf
      ignore_errors: true

    - name: Make the hackme script trusted for for fapolicyd. pssst! ;)
      ansible.builtin.shell: fapolicyd-cli --file add /home/lvrabec/hackme.sh --trust-file hackme
      ignore_errors: true

    - name: Restart fapolicyd
      systemd:
        name: fapolicyd.service
        state: restarted
        enabled: yes

    - name: Creates daily cronjob for aide check
      ansible.builtin.cron:
        name: Aide check
        special_time: daily
        user: root
        job: "aide --check"

    - name: Create init of aide database
      ansible.builtin.shell: aide --init

    - name: Make new copy of aide db active
      ansible.builtin.shell: mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz

    - name: Creates directory /mnt/mount for USBGuard example
      ansible.builtin.file:
        path: /mnt/mount
        state: directory
        owner: root
        group: root
        mode: '0644'

  roles:
    - linux-system-roles.nbde_client
    - linux-system-roles.selinux
